
#profile
spring.profiles.active=dev
# themleaf
spring.thymeleaf.cache= false
# devtools 热部署生效->过于频繁，关闭
spring.devtools.restart.enabled=false
#设置监控额外的路径
#spring.devtools.restart.additional-paths: src/main/java
#classpath目录下的WEB-INF文件夹内容修改不重启
#spring.devtools.restart.exclude: WEB-INF/**
#spring.devtools.reload.trigger-file=.trigger //这表示只有resources/META-INF/.trigger的内容变化时，才会触发重新编译及加载

# 上传文件总的最大值
spring.http.multipart.enabled=true
spring.http.multipart.max-request-size=10MB
# 单个文件的最大值
spring.http.multipart.max-file-size=10MB

# 前后缀
#spring.mvc.view.prefix=/WEB-INF/
#spring.mvc.view.suffix=.jsp

#mybatis -- 相对路径、绝对路径 
#mybatis.config-locations=classpath*:mybatis/mybatis-config.xml
#mybatis.mapper-locations= classpath:../../mapping/*Mapper.xml
mybatis.mapper-locations= classpath*:/mappings/**/*.xml
#config-locations 可以用xml也可在properties里面配置
# 加上配置之后，只要resultType为这个包下的实体类，就都可以直接用类名来代替全限定名
mybatis.type-aliases-package: demo.juster.spboot.pojo  

# jedis
JEDIS_HOST="127.0.0.1"


#============== kafka ===================
# 指定kafka 代理地址，可以多个
spring.kafka.bootstrap-servers=127.0.0.1:9092

#=============== provider  =======================

spring.kafka.producer.retries=0
# 每次批量发送消息的数量
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432

# 指定消息key和消息体的编解码方式
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

#=============== consumer  =======================
# 指定默认消费者group id
spring.kafka.consumer.group-id=test-consumer-group

spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=100

# 指定消息key和消息体的编解码方式
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
